<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Austin Tripp's website (Posts about frontpage)</title><link>https://austintripp.ca/</link><description></description><atom:link href="https://austintripp.ca/categories/frontpage.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:austin.james.tripp[at]gmail.com"&gt;Austin Tripp&lt;/a&gt; MIT License</copyright><lastBuildDate>Tue, 20 Aug 2024 12:38:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Monty Hall Problem is Really About Policy Assumptions</title><link>https://austintripp.ca/blog/2020/02/10/monty-hall/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: the Monty Hall problem doesn't have a well-defined solution.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2020/02/10/monty-hall/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>statistics</category><guid>https://austintripp.ca/blog/2020/02/10/monty-hall/</guid><pubDate>Mon, 10 Feb 2020 00:00:00 GMT</pubDate></item><item><title>A Quick Tutorial on Bash Quotes</title><link>https://austintripp.ca/blog/2019/07/18/bash-quotes/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;p&gt;Today I learned &lt;strong&gt;way&lt;/strong&gt; more about quotations in bash than I ever thought I needed to know.
I thought I would highlight the interesting use case that I discovered, which requires some special trickery to write a script that executes arbitrary commands.
First, let's quickly review some facts about bash quotes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2019/07/18/bash-quotes/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>programming</category><guid>https://austintripp.ca/blog/2019/07/18/bash-quotes/</guid><pubDate>Wed, 17 Jul 2019 23:00:00 GMT</pubDate></item><item><title>Sparse Matrices: 5 Tips and Tricks</title><link>https://austintripp.ca/blog/2018/09/12/sparse-matrices-tips1/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;p&gt;Over the course of my internship at the online shopping company &lt;a href="https://www.wish.com/"&gt;Wish&lt;/a&gt;, I have dealt a lot with a lot of data in the form of sparse matrices, specificaly in the form of item interaction matrices for customer data. In doing so, I have made heavy use of &lt;a href="https://docs.scipy.org/doc/scipy/reference/sparse.html"&gt;scipy's sparse matrices library&lt;/a&gt;.
Here are 5 tricks that I have learned.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2018/09/12/sparse-matrices-tips1/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>machine learning</category><guid>https://austintripp.ca/blog/2018/09/12/sparse-matrices-tips1/</guid><pubDate>Tue, 11 Sep 2018 23:00:00 GMT</pubDate></item><item><title>Why you should never be certain of your beliefs: a Bayesian perspective</title><link>https://austintripp.ca/blog/2018/08/21/bayes-no-certain-priors/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;p&gt;People are notoriously bad at estimating their percent confidence in their beliefs, as explained further in this &lt;a href="https://en.wikipedia.org/wiki/Overconfidence_effect"&gt;Wikipedia article&lt;/a&gt;. 
Something I thought of recently is what effect this overconfidence has from a Bayesian perspective. 
After a bit of math, I came to the conclusion that having extreme confidence in your beliefs (0% or 100% confidence) implies that you would be unable to change your beliefs if shown evidence to the contrary.
I believe this simple argument suggests that it is very irrational to hold prior beliefs of 0 or 100%. If you do feel this way, then you should choose a very high value (99.99%) or a very low value (0.001%), but always leave some room for error.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2018/08/21/bayes-no-certain-priors/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>statistics</category><guid>https://austintripp.ca/blog/2018/08/21/bayes-no-certain-priors/</guid><pubDate>Mon, 20 Aug 2018 23:00:00 GMT</pubDate></item><item><title>An Overview of Gradient Boosting and Popular Libraries for it.</title><link>https://austintripp.ca/blog/2018/07/17/gradient-boosting/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;p&gt;Everybody doing machine learning wants the best models possible. 
The aim of this blog article is the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To provide an introduction to the machine learning technique known as &lt;em&gt;boosting&lt;/em&gt;, and specifically &lt;em&gt;gradient boosting&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;To compare/contrast boosting with other ensemble methods, such as &lt;em&gt;bagging&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;To explain and compare several popular gradient boosting frameworks, specifically &lt;em&gt;XGBoost&lt;/em&gt;, &lt;em&gt;CatBoost&lt;/em&gt;, and &lt;em&gt;LightGBM&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2018/07/17/gradient-boosting/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>machine learning</category><guid>https://austintripp.ca/blog/2018/07/17/gradient-boosting/</guid><pubDate>Mon, 16 Jul 2018 23:00:00 GMT</pubDate></item><item><title>Turning Adam Optimization into SGD</title><link>https://austintripp.ca/blog/2018/07/02/adam-to-sgd/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;h3 id="motivation"&gt;Motivation&lt;/h3&gt;
&lt;p&gt;This strange question came up when working on a machine learning project to generate embeddings. 
Working with the version of Pytorch available on our DGX (similar to version 0.3.1), I found there was an optimizer called &lt;em&gt;SparseAdam&lt;/em&gt; but not one called &lt;em&gt;SparseSGD&lt;/em&gt;.
Since what I really wanted to do was use SGD, I wondered: could I turn the Adam optimizer into an SGD optimizer by setting the hyperparameters \(\beta_1\), \(\beta_2\), and \(\epsilon\)?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2018/07/02/adam-to-sgd/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>machine learning</category><guid>https://austintripp.ca/blog/2018/07/02/adam-to-sgd/</guid><pubDate>Sun, 01 Jul 2018 23:00:00 GMT</pubDate></item><item><title>Paper Review: A Computational Approach to Organizational Structure</title><link>https://austintripp.ca/blog/2018/07/01/organization_structure_paper/</link><dc:creator>Austin Tripp</dc:creator><description>&lt;div&gt;&lt;h3 id="motivation"&gt;Motivation&lt;/h3&gt;
&lt;p&gt;Ever since I've started doing internships, the concept of efficient organizations has piqued my interest. In every workplace I have been in, time is always wasted by inefficient transfers of information. For example, long meetings where most of the content is irrelevant to most of the people, or repeated interactions with co-workers where you explain the same thing to all of them. Assuming employees make ~$40/hour, a 1 h meeting with 100 people will cost $4000! If these meetings are not productive, then the company gets a negative return on its time investment, which essentially means the company is wasting money. Clearly organizational efficiency is a financially important objective.&lt;/p&gt;
&lt;p&gt;Much of an organization's efficiency can be linked to its structure. Long, big meetings are usually a consequence of a strong &lt;em&gt;hierarchical&lt;/em&gt; organization, where work is done by employees, then synced to a centralized node (a boss), and then possibly recapitulated to the workers in a meeting. However, are there better ways to structure an organization that would save time?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://austintripp.ca/blog/2018/07/01/organization_structure_paper/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>frontpage</category><category>papers</category><guid>https://austintripp.ca/blog/2018/07/01/organization_structure_paper/</guid><pubDate>Sat, 30 Jun 2018 23:00:00 GMT</pubDate></item></channel></rss>